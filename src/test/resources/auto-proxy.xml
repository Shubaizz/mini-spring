<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd
		 http://www.springframework.org/schema/context
		 http://www.springframework.org/schema/context/spring-context-4.0.xsd">


	<bean id="worldService" class="org.springframework.test.service.WorldServiceImpl"/>
	<bean id="worldServiceWithException" class="org.springframework.test.service.WorldServiceWithExceptionImpl"/>

	<!-- 自动代理创建器 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

	<!-- 通知器（定义切点 + 通知） -->
	<bean id="pointcutAdvisor" class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
		<property name="expression" value="execution(* org.springframework.test.service.WorldService.explode(..))"/>
		<property name="advice" ref="combineAdviceInterceptor"/>
	</bean>

	<!-- 通知适配器集合（将 advice 封装为 MethodInterceptor） -->
	<bean id="combineAdviceInterceptor" class="org.springframework.aop.CombineAdviceInterceptor">
		<property name="beforeAdviceInterceptor" ref="methodBeforeAdviceInterceptor"/>
		<property name="afterAdviceInterceptor" ref="methodAfterAdviceInterceptor"/>
		<property name="afterReturningAdviceInterceptor" ref="methodAfterReturningAdviceInterceptor"/>
		<property name="throwsAdviceInterceptor" ref="methodThrowsAdviceInterceptor"/>
<!--		<property name="aroundAdviceInterceptor" ref="methodAroundAdviceInterceptor"/>-->
	</bean>

	<!-- 各类通知及其适配器 -->
	<bean id="methodBeforeAdviceInterceptor" class="org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor">
		<property name="advice" ref="beforeAdvice"/>
	</bean>
	<bean id="beforeAdvice" class="org.springframework.test.common.WorldServiceBeforeAdvice"/>

	<bean id="methodAfterAdviceInterceptor" class="org.springframework.aop.framework.adapter.MethodAfterAdviceInterceptor">
		<property name="advice" ref="afterAdvice"/>
	</bean>
	<bean id="afterAdvice" class="org.springframework.test.common.WorldServiceAfterAdvice"/>

	<bean id="methodAfterReturningAdviceInterceptor" class="org.springframework.aop.framework.adapter.MethodAfterReturningAdviceInterceptor">
		<property name="advice" ref="afterReturningAdvice"/>
	</bean>
	<bean id="afterReturningAdvice" class="org.springframework.test.common.WorldServiceAfterReturningAdvice"/>


	<bean id="methodThrowsAdviceInterceptor" class="org.springframework.aop.framework.adapter.MethodThrowsAdviceInterceptor">
		<property name="advice" ref="throwsAdvice"/>
	</bean>
	<bean id="throwsAdvice" class="org.springframework.test.common.WorldServiceThrowsAdvice"/>

	<bean id="methodAroundAdviceInterceptor" class="org.springframework.aop.framework.adapter.MethodAroundAdviceInterceptor">
		<property name="advice" ref="aroundAdvice"/>
	</bean>
	<bean id="aroundAdvice" class="org.springframework.test.common.WorldServiceAroundAdvice"/>

</beans>